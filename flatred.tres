[gd_resource type="VisualShader" load_steps=5 format=2]

[sub_resource type="VisualShaderNodeColorConstant" id=1]
output_port_for_preview = 1
constant = Color( 1, 0, 0, 1 )

[sub_resource type="VisualShaderNodeInput" id=2]
input_name = "fragcoord"

[sub_resource type="VisualShaderNodeInput" id=3]
input_name = "fragcoord"

[sub_resource type="VisualShaderNodeColorConstant" id=4]
constant = Color( 1, 0, 0, 1 )

[resource]
code = "shader_type spatial;
render_mode specular_schlick_ggx, async_visible, shadows_disabled, ambient_light_disabled;




void vertex() {
// Output:0

}

void fragment() {
// Color:2
	vec3 n_out2p0 = vec3(1.000000, 0.000000, 0.000000);
	float n_out2p1 = 1.000000;

// Output:0
	ALBEDO = n_out2p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -559, 28 )
flags/ambient_light_disabled = true
flags/shadows_disabled = true
nodes/fragment/2/node = SubResource( 1 )
nodes/fragment/2/position = Vector2( -25.7419, 226.959 )
nodes/fragment/3/node = SubResource( 2 )
nodes/fragment/3/position = Vector2( 80, 480 )
nodes/fragment/connections = PoolIntArray( 2, 0, 0, 0 )
nodes/light/2/node = SubResource( 3 )
nodes/light/2/position = Vector2( 29.4247, 297.347 )
nodes/light/3/node = SubResource( 4 )
nodes/light/3/position = Vector2( -222.575, 297.347 )
